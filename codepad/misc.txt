import React, { useState, useEffect, useContext, useRef } from 'react';
import Button from '@material-ui/core/Button';
import Typography from '@material-ui/core/Typography';
import { makeStyles } from '@material-ui/core/styles';

const useStyles = makeStyles((theme) => ({
	winStyle: {
		fontWeight: 'bold'
	},
	buttonTest: {
		background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',
	}
}));

function LoadingButton(props) {
	const classes = useStyles();
	const [isLoading, setLoading] = useState(false);
	const onLoad = useRef(props.onLoad);

	useEffect(() => {
		if (isLoading) {
			onLoad.current().then(() => {
				setLoading(false);
			});
		}
	}, [isLoading]);

	function handleClick() {
		setLoading(true);
	}

	return (
		<Button className= { classes.buttonTest } variant = "contained" disabled = { isLoading } onClick = {!isLoading ? handleClick : null
} >
	{ isLoading? 'Loadingâ€¦': props.label }
	< /Button>
	);
}

function MyComponent() {
	const classes = useStyles();

	return (
		<Typography className= { classes.winStyle } variant = "h1" color = "primary" >
			Test
			< /Typography>
	);
}

///////

import clsx from 'clsx';

///////